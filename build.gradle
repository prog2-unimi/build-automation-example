plugins {
  id 'java'
  id 'jacoco'
  id 'com.diffplug.spotless' version '5.16.0'
}

repositories {
  mavenCentral()
}

configurations {
    umlDoclet
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
  testImplementation 'org.hamcrest:hamcrest:2.2'
  umlDoclet 'nl.talsmasoftware:umldoclet:2.0.15'
}

test {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
  finalizedBy jacocoTestReport
}

task runClass(type: JavaExec) {
  dependsOn build
  group = 'Execution'
  description = 'Runs the main method of a class given by its fully qualified name'
  mainClass = project.hasProperty('mainClass') ? getProperty('mainClass') : 'my.pkg.Example'
  classpath = sourceSets.main.runtimeClasspath
}

javadoc {
  options.docTitle = 'Build Tool Example'
  options.overview = 'src/overview.html'
  options.links = [ 'https://docs.oracle.com/en/java/javase/11/docs/api/' ]
  options.showFromPrivate()
  options.header = '<script type=\'text/javascript\' src=\'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\'></script>'
  options.addBooleanOption('-allow-script-in-comments', true)
}

task UMLJavadoc(type: Javadoc) {
  group = 'Documentation'
  description = 'Generates Javadoc API documentation and UML diagrams for the main source code.'
  source = sourceSets.main.allJava
  classpath = sourceSets.main.compileClasspath
  destinationDir = file("${buildDir}/docs/umljavadoc")
  options.showFromPrivate()
  options.docletpath = configurations.umlDoclet.files.asType(List)
  options.doclet = 'nl.talsmasoftware.umldoclet.UMLDoclet'
  options.addStringOption 'umlImageDirectory', 'images'
  options.addStringOption 'umlImageFormat', 'svg,png'
  options.addStringOption 'Xdoclint:none', '-quiet'
}

spotless {
  enforceCheck false
  java {
    googleJavaFormat('1.11.0')
    removeUnusedImports()
  }
}